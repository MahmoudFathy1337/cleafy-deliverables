// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name GithubAPI
import Foundation
@_exported import GithubAPI
import Swift
import UIKit
import _Concurrency
public protocol ActivityRepositoryProtocol {
  
  #if compiler(>=5.3) && $AsyncAwait
  func getStargazers(request: GithubAPI.GetStargazersRequest) async throws -> [GithubAPI.Stargazer]
  #endif

}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class ActivityRepository : GithubAPI.Repository, GithubAPI.ActivityRepositoryProtocol {
  
  #if compiler(>=5.3) && $AsyncAwait
  final public func getStargazers(request: GithubAPI.GetStargazersRequest) async throws -> [GithubAPI.Stargazer]
  #endif

  @objc deinit
}
@_hasMissingDesignatedInitializers public class Repository {
  @objc deinit
}
extension Foundation.URLRequest {
  public func cURLDescription() -> Swift.String
}
public struct Stargazer : Swift.Codable, Swift.Equatable {
  public let login: Swift.String?
  public let id: Swift.Int?
  public let nodeID: Swift.String?
  public let avatarURL: Swift.String?
  public let gravatarID: Swift.String?
  public let url: Swift.String?
  public let htmlURL: Swift.String?
  public let followersURL: Swift.String?
  public let followingURL: Swift.String?
  public let gistsURL: Swift.String?
  public let starredURL: Swift.String?
  public let subscriptionsURL: Swift.String?
  public let organizationsURL: Swift.String?
  public let reposURL: Swift.String?
  public let eventsURL: Swift.String?
  public let receivedEventsURL: Swift.String?
  public let type: Swift.String?
  public let siteAdmin: Swift.Bool?
  public static func == (a: GithubAPI.Stargazer, b: GithubAPI.Stargazer) -> Swift.Bool
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public enum GithubAPIRepositoryFactory {
  public static func makeActivityRepository() -> GithubAPI.ActivityRepositoryProtocol
}
public struct GetStargazersRequest {
  public let owner: Swift.String
  public let repository: Swift.String
  public let perPage: Swift.Int
  public let page: Swift.Int
  public init(owner: Swift.String, repository: Swift.String, perPage: Swift.Int = 10, page: Swift.Int = 1)
}
